@model User
@{
    ViewBag.Title = "ProFile";
}

<div class="account">
    <div class="container">
        <div class="row">
            <div class="col-12 col-md-6 mx-auto">
                <h1 class="title">Welcome @Model.FirstName</h1>

                @using (Html.BeginForm("ProFile", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.UserID)
                    @Html.HiddenFor(m=>m.UserRoleID)
                    @Html.HiddenFor(m=>m.Password)

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <h3>Your Username is @Model.UserName</h3>

                    @*@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "no-round-input" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })*@
                    <p>&nbsp;</p>


                    <label>First Name</label>

                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "no-round-input" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })



                    <label>Last Name</label>


                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "no-round-input" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                    <label>Email</label>

                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "no-round-input" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                    <button class="no-round-btn" type="submit">Save Your Changes</button>
                    <p>&nbsp;</p>
                    <p>&nbsp;</p>


                    <div class="account-method">
                        <div class="account-function">

                            <a class="create-account" href="@Url.Action("ChangePassword", "User")">Change Password</a>

                        </div>
                        

                    </div>
                    if (Convert.ToInt32(Session["UserRoleID"]) == 2)
                    {
                    <div class="account-method">

                        <div class="account-function">
                            <a class="create-account" href="@Url.Action("RemoveAccount", "User")">Delete Your Account</a>

                        </div>
                    </div>
                        }

                    }

            </div>
        </div>
    </div>
</div>



