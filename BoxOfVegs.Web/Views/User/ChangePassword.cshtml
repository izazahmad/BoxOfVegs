@model ChangePasswordViewModel
@{
    ViewBag.Title = "ChangePassword";
}

<div class="account">
    <div class="container">
        <div class="row">
            <div class="col-12 col-md-6 mx-auto">
                <h1 class="title">Change Password</h1>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                  
                    <label>Old Password</label>

                    @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "no-round-input", @type="password" } })
                    @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                    <label>New Password </label>

                    @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "no-round-input", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })



                    <label>Confirm Password </label>

                    @Html.EditorFor(model => model.NewConfirmPassword, new { htmlAttributes = new { @class = "no-round-input", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.NewConfirmPassword, "", new { @class = "text-danger" })


                    <div class="account-function">
                        <button class="no-round-btn">Save</button>
                    </div>

                }
                @if(@ViewBag.message != null)
                {
                    <p class="text-danger"> @ViewBag.message </p>
                }

            </div>
        </div>
    </div>
</div>

