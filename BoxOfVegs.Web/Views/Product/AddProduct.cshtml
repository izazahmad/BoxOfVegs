@model BoxOfVegs.Entities.Product

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    //var imageDeflt = "/Content/images/system/placeholder-image.png";
}

<div class="container-fluid">

    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="../Admin">Dashboard</a>
        </li>
        <li class="breadcrumb-item active">Products</li>
        <li class="breadcrumb-item active">Add Product</li>
    </ol>

    <div class="card mb-3">
        <div class="card-header">
            <i class="fas fa-table"></i>
            Add Product
        </div>
        <div class="card-body">
            @using (Html.BeginForm("AddProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()


                <div class="form-horizontal">
                    
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-6 col-md-4">
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-6 col-md-4">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-6 col-md-4">
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @{
                        List<SelectListItem> data = ViewBag.CategoryList;
                    }

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-6 col-md-4">
                            @Html.DropDownListFor(model => model.CategoryID, data, "---Select---", new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            <label>Image</label>
                            <input type="hidden" id="ImageURL" name="ImageURL" />
                            <input class="form-control" id="imageUpload" name="Image" type="file" accept=".png, .jpg" />
                        </div>*@

                    <div class="form-group">
                        @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                           
                            <input type="file" name="file" id="file" style="width: 50%" />
                            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.isFeatured, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-6 col-md-4">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.isFeatured)
                                @Html.ValidationMessageFor(model => model.isFeatured, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-6 col-md-4">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-auto">
                            <input type="submit" value="Save" class="btn btn-outline-primary" />
                        </div>
                        <div class="col-auto">
                            <a onclick="window.history.back();" class="btn btn-outline-primary">Cancel</a>
                        </div>
                    </div>


                </div>

            }
            </div>
    </div>
    </div>
  
